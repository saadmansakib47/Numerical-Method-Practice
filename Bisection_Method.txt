def bisection_method(func, a, b, error_accept):
    ****
    This function solves for an unknown root of a non-linear function given the 
    function , the initial root boundaries, and an acceptable level of error

    Parameters:
    --------------------------------
    :param func : the user defined function which needes to be entered as a string
    :param a : the initial lower root boundary
    :param b : the initial upper root boundary
    :param error_accept: The user's acceptable level of error.

    Returns:
    ---------------------------------
    The root boundaries and the error at the final iteration
    ****


    def f(x):
        f = eval(func)
        return f 

    error = abs(b - a)

    while error>error_accept:
        c = (b+a)/2

        if f(a) * f(b) >=0 : 
            printf("No root or multiple roots present, therefore, the bisection will not work!")
            quit() 
 
        elif f(c) * f(a) < 0 : 
            b = c 
            error = abs(b - a)

        elif f(c) * f(b) < 0 : 
            a = c
            error = abs(b - a)